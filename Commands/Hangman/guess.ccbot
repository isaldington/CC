/*
    Type: On Modal Submit
    Slash ID: hangman
    Required Permission: None
    Ignored Roles: None
    Run only in: None
    Channel Used: Run in Channel
*/
$let[guess;$toUppercase[$modalAnswer[guess]]]
$let[word;$toUppercase[$guess]]
$objectCreate[$getUserVar[wordGuessSession]]
$forEach[var;letter,word;,]{
    $if[$objectKeyExists[previous_guess;$var]==true]{
	    $arrayCreate[$objectGet[previous_guess;$var];,;history_$var]
    }
}
$if[$regexCheck[$guess;^[A-Za-z]+$;i]==false]{
	$let[reason;`$guess` is not a valid entry]
$elseif[$arrayInclude[$word;history_word]==true]
	$let[reason;You have already guessed that word]
$endelseif
}
$onlyIf[$get[reason]==undefined;
	{private}
	{color:db3539}
	{author:Error:$msg[1157421810288185384;1157974096198508604;attachment;6]}
	{desc:$reason. Please try again.}
]
$objectIncrease[guess_total;1]
$if[$toUppercase[$guess]!=$objectGet[word]]{
    $objectIncrease[guess_incorrect;1]
}
$arrayPush[$word;history_word]
$objectSet[previous_guess;word;$arrayJoin[,;history_word]]
$let[remGuess;$math[$objectGet[max_guess]-$objectGet[guess_incorrect]]]
$let[gameOver;$checkCondition[$remGuess==0||$word==$objectGet[word]]]
$if[$gameOver==true]{
	$let[outcome;$conditional[$word==$objectGet[word];win;lose]]
$else
	$let[resultText;Incorrect]
	$let[embedColor;db3539]
	$arrayCreate[$objectGet[guess];,;guess]
	$let[display;Sorry! Your guess **$word** is incorrect.#NL#### $arrayJoin[ ;guess]]
	$setUserVar[wordGuessSession;$getObject]
}
$includeLibrary[hangman]